# Cross-Tools: GCC Final
# Build and install as oml

# Additional sources to add as GCC requires them 
xz -cd ../pkgs/mpfr-4.1.0.tar.xz | tar -xf -
mv -v mpfr-4.1.0 mpfr
xz -cd ../pkgs/gmp-6.2.1.tar.xz | tar -xf -
mv -v gmp-6.2.1 gmp
gunzip -cd ../pkgs/mpc-1.2.1.tar.gz | tar -xf -
mv -v mpc-1.2.1 mpc
tar xf ../pkgs/isl-0.18.tar.bz2
mv -v isl-0.18 isl

# Apply patches for MUSL support
for p in 0001-posix_memalign \
  0002-gcc-poison-system-directories \
  0003-Turn-on-Wl-z-relro-z-now-by-default  \
  0004-Turn-on-D_FORTIFY_SOURCE-2-by-default-for-C-C-ObjC-O \
  0006-Enable-Wformat-and-Wformat-security-by-default \
  0007-Enable-Wtrampolines-by-default \
  0009-Ensure-that-msgfmt-doesn-t-encounter-problems-during \
  0010-Don-t-declare-asprintf-if-defined-as-a-macro \
  0011-libiberty-copy-PIC-objects-during-build-process \
  0012-libitm-disable-FORTIFY \
  0013-libgcc_s \
  0014-nopie \
  0015-libffi-use-__linux__-instead-of-__gnu_linux__-for-mu \
  0016-dlang-update-zlib-binding \
  0017-dlang-fix-fcntl-on-mips-add-libucontext-dep \
  0018-ada-fix-shared-linking \
  0019-build-fix-CXXFLAGS_FOR_BUILD-passing \
  0020-add-fortify-headers-paths \
#  0021-Alpine-musl-package-provides-libssp_nonshared.a.-We- \
  0023-Pure-64-bit-MIPS \
  0024-use-pure-64-bit-configuration-where-appropriate \
  0025-always-build-libgcc_eh.a \
  0027-ada-musl-support-fixes \
  0028-gcc-go-Use-_off_t-type-instead-of-_loff_t \
  0029-gcc-go-Don-t-include-sys-user.h \
  0030-gcc-go-Fix-ucontext_t-on-PPC64 \
  0031-gcc-go-Fix-handling-of-signal-34-on-musl \
  0032-gcc-go-Use-int64-type-as-offset-argument-for-mmap \
  0034-gcc-go-signal-34-is-special-on-musl-libc \
  0035-gcc-go-Prefer-_off_t-over-_off64_t \
  0036-gcc-go-undef-SETCONTEXT_CLOBBERS_TLS-in-proc.c \
  0037-gcc-go-link-to-libucontext \
  0038-gcc-go-Disable-printing-of-unaccessible-ppc64-struct \
  0041-Use-generic-errstr.go-implementation-on-musl \
  0042-Disable-ssp-on-nostdlib-nodefaultlibs-and-ffreestand \
  0043-configure-Add-enable-autolink-libatomic-use-in-LINK_ \
  0044-DP-Use-push-state-pop-state-for-gold-as-well-when-li
do
  patch -Np1 -i ../patches/gcc-alpine/$p.patch
done

# Apply patches from Clear Linux
# *** causes build to fail***
#for p in arch-native-override \
  0001-Add-TARGET_CLEAR_BY_PIECES_fixed \
  0001-Always-use-z-now-when-linking-with-pie \
  0001-Fix-stack-protection-issues \
  0001-Ignore-Werror-if-GCC_IGNORE_WERROR-environment-varia \
  avx512-when-we-ask-for-it \
  fortran-vector-v2 \
  gcc-stable-branch \
  gomp-relax \
  ipa-cp \
  memcpy-avx2 \
  openmp-vectorize-v2 \
  optimize-at-least-some \
  optimize \
  skipvzeroupper \
  tune-inline \
  v2-0001-x86-Don-t-set-AVX_U128_DIRTY-when-all-bits-are-ze \
  vectorcost 
do
#  patch -Np1 -i ../patches/gcc-clear/$p.patch
done

# Build in a dedicated build directory
mkdir build && cd  build

# Enable LTO
export  XTRA="--enable-lto "
#export XTRA+="--with-plugin-ld=/cross-tools/x86_64-optimux-linux-musl/bin/ld "
# link plugin? This GCC still wont compile with -flto BUT should be able to build binaries with -flto
#ln -sv  ../../libexec/gcc/x86_64-optimux-linux-musl/11.2.0/liblto_plugin.so /cross-tools/lib/bfd-plugins/liblto_plugin.so

# Turn off features
export  OFFF="--disable-symvers " 
export OFFF+="--disable-libsanitizer "
export OFFF+="--disable-libssp "
export OFFF+="--disable-multilib "
#export OFFF+="--disable-lto-plugin "

# Set the build
export  BCONF="--build=${OML_HOST} "
export BCONF+="--host=${OML_HOST} "
export BCONF+="--target=${OML_TARGET} "

#export  CFLAGS="-march=native -pipe -O3 -fno-semantic-interposition "
#export CFLAGS+="-falign-functions=32 -flimit-function-alignment -malign-data=cacheline "
#export LDFLAGS="-Wl,-O2 -Wl,--as-needed "

# Enable graphite
export GON="--with-ppl --with-cloog "

# Configure source
#CFLAGS="$CFLAGS" CXXFLAGS="$CFLAGS" \
#AR=ar LDFLAGS="-Wl,-rpath,/cross-tools/lib $LDFLAGS" \
AR=ar LDFLAGS="-Wl,-rpath,/cross-tools/lib" \
../configure $BCONF \
    --prefix=/cross-tools \
    --with-sysroot=/cross-tools \
    --disable-nls \
    --enable-shared \
    --enable-languages=c,c++ \
    --enable-threads=posix \
    --enable-clocale=generic \
    --enable-libstdcxx-time \
    --enable-fully-dynamic-string \
    --with-pkgversion="Optimux-CT 1.0.0 Final" $XTRA $GON $OFFF

# Build
make AS_FOR_TARGET="${OML_TARGET}-as" \
    LD_FOR_TARGET="${OML_TARGET}-ld"

# Install
make install
unset BCONF XTRA OFFF GON CFLAGS CXXFLAGS LDFLAGS 
